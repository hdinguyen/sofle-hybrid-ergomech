/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC     &kp N1     &kp N2    &kp N3    &kp N4  &kp N5     &kp N6     &kp N7     &kp N8        &kp N9     &kp N0     &kp BSPC
&kp TAB     &kp Q      &kp W     &kp E     &kp R   &kp T      &kp Y      &kp U      &kp I         &kp O      &kp P      &kp LEFT_BRACKET
&mo 3       &kp A      &kp S     &kp D     &kp F   &kp G      &kp H      &kp J      &kp K         &kp L      &kp SEMI   &kp ENTER
&kp LSHFT   &kp Z      &kp X     &kp C     &kp V   &kp B      &kp N      &kp M      &kp COMMA     &kp DOT    &kp FSLH   &kp RBKT
&kp C_MUTE  &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp SPACE  &kp SPACE  &mo 2      &kp RALT      &kp RSHFT  &kp RCTRL
                                                              &kp ENTER  &kp RIGHT  &kp UP_ARROW  &kp LEFT   &kp DOWN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        first_layer {
            label = "1st";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE    &kp F1     &kp F2     &kp F3     &kp NUMBER_4  &kp F5             &kp F6            &kp F7               &kp N8            &kp MINUS           &kp EQUAL           &trans
&kp LG(TAB)  &kp LG(Q)  &kp LG(W)  &kp N3     &kp LG(R)     &kp DOUBLE_QUOTES  &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp LG(I)         &kp UNDERSCORE      &kp PLUS            &kp BACKSLASH
&kp LSHFT    &kp LG(A)  &kp LG(S)  &kp HASH   &kp LG(F)     &kp PRCNT          &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp LG(K)         &kp SQT             &kp SEMI            &kp LS(ENTER)
&kp LCTRL    &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)     &kp LC(B)          &kp LESS_THAN     &kp GREATER_THAN     &trans            &trans              &kp BSLH            &kp RIGHT_BRACKET
&trans       &trans     &trans     &trans     &trans        &trans             &kp LG(SPACE)     &trans               &trans            &trans              &trans
                                                                               &kp ENTER         &kp LG(RIGHT_ARROW)  &kp LG(UP_ARROW)  &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)
            >;

            sensor-bindings =
                <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        second_layer {
            label = "2nd";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &none      &none        &none        &none      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK      &kp MINUS           &kp EQUAL           &kp BACKSLASH
&trans     &kp INS          &kp PSCRN  &kp K_CMENU  &trans       &trans     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans            &kp COLON           &kp EQUAL           &kp LEFT_BRACE
&trans     &kp LALT         &kp LCTRL  &kp LSHFT    &trans       &kp CLCK   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans            &kp SINGLE_QUOTE    &kp SEMICOLON       &kp RS(RETURN)
&trans     &kp K_UNDO       &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans     &kp LESS_THAN         &kp GREATER_THAN       &none             &none               &none               &kp RIGHT_BRACE
&trans     &trans           &trans     &trans       &trans       &kp ENTER  &trans                &trans                 &trans            &trans              &trans
                                                                            &kp ENTER             &kp RA(RIGHT_ARROW)    &kp RA(UP_ARROW)  &kp RA(LEFT_ARROW)  &kp RA(DOWN_ARROW)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        code_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "<code>";
            bindings = <
&none            &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &kp KP_NUMBER_6  &none    &none      &none     &none      &bt BT_CLR
&none            &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &none            &none    &none      &none     &none      &none
&none            &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none            &none            &none    &none      &none     &none      &none
&none            &none            &none            &none            &none            &none            &none            &none    &none      &none     &none      &none
&rgb_ug RGB_OFF  &none            &none            &none            &none            &kp SPACE        &kp SPACE        &none    &none      &none     &none
                                                                                                      &kp A            &kp END  &kp PG_UP  &kp HOME  &kp PG_DN
            >;
        };
    };
};
